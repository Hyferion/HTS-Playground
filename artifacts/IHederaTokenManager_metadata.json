{
	"compiler": {
		"version": "0.8.16+commit.07a7930e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"name": "AdminKeyUpdateError",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "s",
						"type": "string"
					}
				],
				"name": "MoreThan100Error",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "RefundingError",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "int256",
						"name": "code",
						"type": "int256"
					}
				],
				"name": "ResponseCodeInvalid",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "SupplyKeyUpdateError",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "admin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "metadata",
						"type": "string"
					}
				],
				"name": "MetadataSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "receiver",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "int64",
						"name": "amount",
						"type": "int64"
					}
				],
				"name": "TokenTransfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "string",
								"name": "tokenName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "tokenSymbol",
								"type": "string"
							},
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "keyType",
										"type": "uint256"
									},
									{
										"internalType": "bytes",
										"name": "publicKey",
										"type": "bytes"
									},
									{
										"internalType": "bool",
										"name": "isED25519",
										"type": "bool"
									}
								],
								"internalType": "struct KeysLib.KeysStruct[]",
								"name": "keys",
								"type": "tuple[]"
							},
							{
								"internalType": "int64",
								"name": "second",
								"type": "int64"
							},
							{
								"internalType": "int64",
								"name": "autoRenewPeriod",
								"type": "int64"
							},
							{
								"internalType": "string",
								"name": "tokenMetadataURI",
								"type": "string"
							}
						],
						"indexed": false,
						"internalType": "struct IHederaTokenManager.UpdateTokenStruct",
						"name": "updateTokenStruct",
						"type": "tuple"
					}
				],
				"name": "TokenUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "burner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "int64",
						"name": "amount",
						"type": "int64"
					}
				],
				"name": "TokensBurned",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "int64",
						"name": "amount",
						"type": "int64"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "TokensMinted",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"AdminKeyUpdateError()": [
					{
						"details": "Emitted when updating the token admin key"
					}
				],
				"MoreThan100Error(string)": [
					{
						"details": "Emitted when the provided `s` is less than 100 characters long",
						"params": {
							"s": "The string to check"
						}
					}
				],
				"RefundingError(uint256)": [
					{
						"details": "Emitted when transfering funds back to original sender after creating the token did not work",
						"params": {
							"amount": "The value to check"
						}
					}
				],
				"ResponseCodeInvalid(int256)": [
					{
						"details": "Emitted when the provided `code` is not success",
						"params": {
							"code": "The code to check"
						}
					}
				],
				"SupplyKeyUpdateError()": [
					{
						"details": "Emitted when updating the token supply key"
					}
				]
			},
			"events": {
				"MetadataSet(address,string)": {
					"details": "Emitted when a new metadata was set",
					"params": {
						"admin": "The account that set the metadata",
						"metadata": "The metadata that was set"
					}
				},
				"TokenTransfer(address,address,address,int64)": {
					"details": "Emitted when tokens have been transfered from sender to receiver",
					"params": {
						"amount": "Transfered amount",
						"receiver": "Receiver address",
						"sender": "Sender address",
						"token": "Token address"
					}
				},
				"TokenUpdated(address,(string,string,(uint256,bytes,bool)[],int64,int64,string))": {
					"details": "Emitted when token updated",
					"params": {
						"token": "Token address",
						"updateTokenStruct": "Struct containing updated token data"
					}
				},
				"TokensBurned(address,address,int64)": {
					"details": "Emitted when the `amount` tokens are burned from TokenOwner",
					"params": {
						"amount": "The number of tokens to burn",
						"burner": "The caller of the function that emitted the event",
						"token": "Token address"
					}
				},
				"TokensMinted(address,address,int64,address)": {
					"details": "Emitted when the `amount` tokens have been minted to account",
					"params": {
						"account": "Account address",
						"amount": "The number of tokens to mint",
						"minter": "The caller of the function that emitted the event",
						"token": "Token address"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"balanceOf(address)": {
					"details": "Returns the number tokens that an account has",
					"params": {
						"account": "The address of the account to be consulted"
					},
					"returns": {
						"_0": "uint256 The number number tokens that an account has"
					}
				},
				"decimals()": {
					"details": "Returns the number of decimals of the token",
					"returns": {
						"_0": "uint8 The number of decimals of the token"
					}
				},
				"name()": {
					"details": "Returns the name of the token",
					"returns": {
						"_0": "The the name of the token"
					}
				},
				"symbol()": {
					"details": "Returns the symbol of the token",
					"returns": {
						"_0": "The the symbol of the token"
					}
				},
				"totalSupply()": {
					"details": "Returns the total number of tokens that exits",
					"returns": {
						"_0": "uint256 The total number of tokens that exists"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/IHederaTokenManager.sol": "IHederaTokenManager"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/IHederaTokenManager.sol": {
			"keccak256": "0x67d23c1dec61fb57329383d8748914272ce57951cccace7fcff0cc390824c684",
			"license": "MIT",
			"urls": [
				"bzz-raw://8685445adfafca4d2bbfbae1eb2aad198304183a2d0b754331ddd5adcefbf34f",
				"dweb:/ipfs/Qmd2cRM3n2rGkxjk6trUVEGYtP6i3Xnh2SZLPLEtjCNiz9"
			]
		},
		"contracts/IHederaTokenService.sol": {
			"keccak256": "0x1f4ad5320ee92046960428592f32d3ee0d73649e869605a324b83502fc68dedb",
			"license": "Apache-2.0",
			"urls": [
				"bzz-raw://69f900dacc86e03b972c68d5c9d5566e07927a507f7790b6914ae62e5c2dc2ea",
				"dweb:/ipfs/QmUKbmEK1bzY1EVg4cCrdxPhN4G37u2LXMXJWRP3xJ9HiU"
			]
		},
		"contracts/library/KeysLib.sol": {
			"keccak256": "0x715633123b0323c1f3ff1a6a770011e28bf98fa40ad3a9e8170e0ad4d7aaf741",
			"license": "MIT",
			"urls": [
				"bzz-raw://24b9e0f146e7223be3d4bfc74404d6769f6bc32ecd8c19fa53f129008f5dd642",
				"dweb:/ipfs/QmSgKrGfg8UuwvF4cwNT9FgQJSgLc1cR6QsVW2LZUAPxWy"
			]
		}
	},
	"version": 1
}